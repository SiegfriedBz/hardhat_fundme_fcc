{
  "address": "0xbEC9aF4906722aAaC45Cb01241D8569bDC9f483a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_AggregatorV3Interface_Address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x56ed9ddcb8859dad50a96f22c4a88b3a133015dc5290c811a3cfaaf6d192fabd",
  "receipt": {
    "to": null,
    "from": "0x8de905283f3c93b0fb4FA34CA8024Ea59e81e436",
    "contractAddress": "0xbEC9aF4906722aAaC45Cb01241D8569bDC9f483a",
    "transactionIndex": 53,
    "gasUsed": "935245",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xaa2379e6a2d095658b1c94c86a573d4ba9f4903245169bc6b69a2ab952fd189c",
    "transactionHash": "0x56ed9ddcb8859dad50a96f22c4a88b3a133015dc5290c811a3cfaaf6d192fabd",
    "logs": [],
    "blockNumber": 7734010,
    "cumulativeGasUsed": "15179493",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "7ad8f1495cb72e171007479f1aaf49a0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_AggregatorV3Interface_Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"SiegfriedBz\",\"details\":\"This implements PriceFeed as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FundMe A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title FundMe A contract for crowd funding\\n *  @author SiegfriedBz\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implements PriceFeed as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address _AggregatorV3Interface_Address) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(_AggregatorV3Interface_Address);\\n        // Goerli ETH / USD Address : 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        // for example ETH/USD price on Goerli Network.\\n        return priceFeed.version();\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x557145531afe0412ce7e38d8935d521a14f80b10baac9fb466a6805ed01563d2\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb6270c86e57bfed077355468d6a934f19843e652c7ce8ecec9cde9e72c6fbac9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200110138038062001101833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610f8962000178600039600081816103c2015261064d0152610f896000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba919061084a565b60405180910390f35b3480156100cf57600080fd5b506100d86103c0565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108c8565b610600565b60405161010e919061084a565b60405180910390f35b34801561012357600080fd5b5061012c610618565b604051610139919061084a565b60405180910390f35b34801561014e57600080fd5b50610157610625565b6040516101649190610954565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61064b565b604051610199919061097e565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109c5565b61066f565b6040516101d6919061097e565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106ae90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a4f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a9e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb9190610b09565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610445576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104f05760006001828154811061046b5761046a610b36565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e890610b65565b915050610448565b50600067ffffffffffffffff81111561050c5761050b610bae565b5b60405190808252806020026020018201604052801561053a5781602001602082028036833780820191505090505b506001908051906020019061055092919061078a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161057790610c0e565b60006040518083038185875af1925050503d80600081146105b4576040519150601f19603f3d011682016040523d82523d6000602084013e6105b9565b606091505b50509050806105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610c6f565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061067f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ba836106ea565b90506000670de0b6b3a764000085836106d39190610c8f565b6106dd9190610d18565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561073357600080fd5b505afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190610dc1565b5050509150506402540be400816107829190610e3c565b915050919050565b828054828255906000526020600020908101928215610803579160200282015b828111156108025782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107aa565b5b5090506108109190610814565b5090565b5b8082111561082d576000816000905550600101610815565b5090565b6000819050919050565b61084481610831565b82525050565b600060208201905061085f600083018461083b565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108958261086a565b9050919050565b6108a58161088a565b81146108b057600080fd5b50565b6000813590506108c28161089c565b92915050565b6000602082840312156108de576108dd610865565b5b60006108ec848285016108b3565b91505092915050565b6000819050919050565b600061091a6109156109108461086a565b6108f5565b61086a565b9050919050565b600061092c826108ff565b9050919050565b600061093e82610921565b9050919050565b61094e81610933565b82525050565b60006020820190506109696000830184610945565b92915050565b6109788161088a565b82525050565b6000602082019050610993600083018461096f565b92915050565b6109a281610831565b81146109ad57600080fd5b50565b6000813590506109bf81610999565b92915050565b6000602082840312156109db576109da610865565b5b60006109e9848285016109b0565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a39601b836109f2565b9150610a4482610a03565b602082019050919050565b60006020820190508181036000830152610a6881610a2c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa982610831565b9150610ab483610831565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ae957610ae8610a6f565b5b828201905092915050565b600081519050610b0381610999565b92915050565b600060208284031215610b1f57610b1e610865565b5b6000610b2d84828501610af4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b7082610831565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ba357610ba2610a6f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bf8600083610bdd565b9150610c0382610be8565b600082019050919050565b6000610c1982610beb565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c59600b836109f2565b9150610c6482610c23565b602082019050919050565b60006020820190508181036000830152610c8881610c4c565b9050919050565b6000610c9a82610831565b9150610ca583610831565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cde57610cdd610a6f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d2382610831565b9150610d2e83610831565b925082610d3e57610d3d610ce9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d6881610d49565b8114610d7357600080fd5b50565b600081519050610d8581610d5f565b92915050565b6000819050919050565b610d9e81610d8b565b8114610da957600080fd5b50565b600081519050610dbb81610d95565b92915050565b600080600080600060a08688031215610ddd57610ddc610865565b5b6000610deb88828901610d76565b9550506020610dfc88828901610dac565b9450506040610e0d88828901610af4565b9350506060610e1e88828901610af4565b9250506080610e2f88828901610d76565b9150509295509295909350565b6000610e4782610d8b565b9150610e5283610d8b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e9157610e90610a6f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ece57610ecd610a6f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f0b57610f0a610a6f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f4857610f47610a6f565b5b82820290509291505056fea26469706673582212207adc31866fe2091120e93c7818ce342c9f02f131597ed440d03b466d21009e6464736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba919061084a565b60405180910390f35b3480156100cf57600080fd5b506100d86103c0565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108c8565b610600565b60405161010e919061084a565b60405180910390f35b34801561012357600080fd5b5061012c610618565b604051610139919061084a565b60405180910390f35b34801561014e57600080fd5b50610157610625565b6040516101649190610954565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61064b565b604051610199919061097e565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109c5565b61066f565b6040516101d6919061097e565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106ae90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a4f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a9e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb9190610b09565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610445576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104f05760006001828154811061046b5761046a610b36565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e890610b65565b915050610448565b50600067ffffffffffffffff81111561050c5761050b610bae565b5b60405190808252806020026020018201604052801561053a5781602001602082028036833780820191505090505b506001908051906020019061055092919061078a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161057790610c0e565b60006040518083038185875af1925050503d80600081146105b4576040519150601f19603f3d011682016040523d82523d6000602084013e6105b9565b606091505b50509050806105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610c6f565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061067f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ba836106ea565b90506000670de0b6b3a764000085836106d39190610c8f565b6106dd9190610d18565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561073357600080fd5b505afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190610dc1565b5050509150506402540be400816107829190610e3c565b915050919050565b828054828255906000526020600020908101928215610803579160200282015b828111156108025782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107aa565b5b5090506108109190610814565b5090565b5b8082111561082d576000816000905550600101610815565b5090565b6000819050919050565b61084481610831565b82525050565b600060208201905061085f600083018461083b565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108958261086a565b9050919050565b6108a58161088a565b81146108b057600080fd5b50565b6000813590506108c28161089c565b92915050565b6000602082840312156108de576108dd610865565b5b60006108ec848285016108b3565b91505092915050565b6000819050919050565b600061091a6109156109108461086a565b6108f5565b61086a565b9050919050565b600061092c826108ff565b9050919050565b600061093e82610921565b9050919050565b61094e81610933565b82525050565b60006020820190506109696000830184610945565b92915050565b6109788161088a565b82525050565b6000602082019050610993600083018461096f565b92915050565b6109a281610831565b81146109ad57600080fd5b50565b6000813590506109bf81610999565b92915050565b6000602082840312156109db576109da610865565b5b60006109e9848285016109b0565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a39601b836109f2565b9150610a4482610a03565b602082019050919050565b60006020820190508181036000830152610a6881610a2c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa982610831565b9150610ab483610831565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ae957610ae8610a6f565b5b828201905092915050565b600081519050610b0381610999565b92915050565b600060208284031215610b1f57610b1e610865565b5b6000610b2d84828501610af4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b7082610831565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ba357610ba2610a6f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bf8600083610bdd565b9150610c0382610be8565b600082019050919050565b6000610c1982610beb565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c59600b836109f2565b9150610c6482610c23565b602082019050919050565b60006020820190508181036000830152610c8881610c4c565b9050919050565b6000610c9a82610831565b9150610ca583610831565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cde57610cdd610a6f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d2382610831565b9150610d2e83610831565b925082610d3e57610d3d610ce9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d6881610d49565b8114610d7357600080fd5b50565b600081519050610d8581610d5f565b92915050565b6000819050919050565b610d9e81610d8b565b8114610da957600080fd5b50565b600081519050610dbb81610d95565b92915050565b600080600080600060a08688031215610ddd57610ddc610865565b5b6000610deb88828901610d76565b9550506020610dfc88828901610dac565b9450506040610e0d88828901610af4565b9350506060610e1e88828901610af4565b9250506080610e2f88828901610d76565b9150509295509295909350565b6000610e4782610d8b565b9150610e5283610d8b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e9157610e90610a6f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ece57610ecd610a6f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f0b57610f0a610a6f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f4857610f47610a6f565b5b82820290509291505056fea26469706673582212207adc31866fe2091120e93c7818ce342c9f02f131597ed440d03b466d21009e6464736f6c63430008080033",
  "devdoc": {
    "author": "SiegfriedBz",
    "details": "This implements PriceFeed as our library",
    "kind": "dev",
    "methods": {},
    "title": "FundMe A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}